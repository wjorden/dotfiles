#! /bin/bash

# Default project name... Classic.
project=test

# Gotta help people somewhere
Help(){
	echo "########################################################################"
	echo "#----------------> GenC - C Project Generator v0.1-1a <----------------#"
	echo "#--------------------> Were Verobsity Is Default. <--------------------#"
	echo "########################################################################"
	echo
	echo "#-> Syntax: genc [-p|g|b|h]"
	echo "#-> Options:"
	echo "##-> -p NAME	Specify project name. This will be the directory name."
	echo "##-> -g		Run git init after everything is done."
	echo "##-> -h		Print this help."
	echo
}

# Handle options
while getopts p:gbh flag
do 
	case "${flag}" in
		p) 
			project=${OPTARG};;
		g) 
			git=1;;
		h) 
			Help 
			exit;;
		\?) 
			echo "invalid option. Valid options are -p <name> -g<|optional, enable git<|"
			exit ;;
	esac
done

# prompt for project generation
echo "Generate C project structure for $project?"
read -p "[y]es/[N]o(default)" -N 1 reply

# check confirmation
if ! [[ "$reply" =~ ^[yY]$ ]]; then
	echo "Exiting..."
	exit
# check for existing directory
elif [ -d ./$project ]; then
	echo "ERROR: Directory with the name $project exists."
	echo "Exiting..."
	exit
fi

# \n
echo

# Default is verbose
echo "Making Directories..."
mkdir -p $PWD/$project $PWD/$project/src $PWD/$project/include $PWD/$project/lib $PWD/$project/build
echo "Copying template source files!"
cp ~/.config/bash/templates/c/src/* $PWD/$project/src/
echo "Copying template include files!"
cp ~/.config/bash/templates/c/include/* $PWD/$project/include/
echo "Generating README!"
touch $PWD/$project/README.md
echo "#$project" > $PWD/$project/README.md
echo "Copying Makefile Template!"
cp ~/.config/bash/templates/c/build/Makefile $PWD/$project/

# git stuff
if  [[ $git != 1  ]]; then
	echo "Git not set."
else
	echo "Running git init."
	git init -b main $PWD/$project/
fi
